Fourth edition of EN ISO 13849-1 Most important new features in 2023 at a glance Overview The International Organisation for Standardisation (ISO) has published a new version of the basic safety standard for machine controls, ISO 13849-1 “Safety of machinery – Safety-related parts of control systems – Part 1: General principles for design” [1]. A quarter of a century after the first publication of this standard, this is now a completely revised and modernised version. There is still quite some time before the EU Standard EN 13849-1 is harmonised, before the transitional three-year period has been completed and before the new version becomes binding. Yet it is nevertheless worth taking an early glimpse at its new features. Whereas the changes in the third edition of 2015 were merely editorial, to improve readability and usability, the latest update contains a range of more substantial adjustments and additions. For instance, the core sections “Design considerations”, “Safety functions” and “Categories”, which had grown and been supplemented since 1997, were systematically reorganised in order to map – after an “Overview” – first the “Specification of safety functions” and then the design process. Also, the role of subsystems within a safety chain has now been defined in more detail – especially concerning the integration of subsystems that have been given safety integrity levels (SILs) under IEC standards (IEC: International Electrotechnical Commission) on functional safety. The final design stage of validation, which was previously included in part 2 of the standard, has now been placed in part 1 as section 10 – largely unchanged in terms of content – so as to clearly emphasise its importance in the context of safety-oriented design. Further important improvements are the more detailed presentation of requirements for safety-related software and the newly included strategies for the practical implementation of electromagnetic chart in the form of a simplified table. Fourth Edition of EN ISO 13849-1 (July 2023) 6 / 12 6.6 Subsection 6.1.9: Alternative procedure to determine the PL and PFH without MTTF D The alternative procedure introduced for the output part of an SRP/CS in the previous edition of the standard has now been modified and extended to include the input and logic parts. At the same time, it has been limited in its application: It continues to apply to subsystems containing mechanical, (electro-)hydraulic and (electro-)pneumatic components for which no reliability data is available. Now, however, it only applies if it is impossible to use the good engineering practice method provided in Annex C.2 of the standard. The familiar procedure for the output part (energy transfer elements) is now also applicable to the input part. However, an additional requirement in Categories 2, 3 and 4 is that, like in Category 1, only well-tried components are permitted. The alternative use of proven in use components has been omitted. A new approach has been added for the logic part: Category B, 2 and 3 subsystems may use an estimated value of ten years for the MTTF of each channel. In Category 1, this estimate has been D increased to 30 years, as well-tried components are required. This method is not permitted for logic subsystems in Category 4. The achievable maximum is PL c. 6.7 Subsection 6.1.10: Fault consideration and fault exclusion The previous section 7 of the standard on fault considerations and fault exclusions has now been moved to subsection 6.1.10 and has been given a more detailed introduction. In addition, a restriction is mentioned that was previously only known from ISO/TR 23849 [2]: A PL e for subsystems must not be based on fault exclusions alone. 6.8 Subsection 6.2: Combination of subsystems As well as making a clear conceptual distinction between subsystems and SRP/CS (as a combination of subsystems), the preferred method of adding familiar PFH values has been separated more distinctly from the alternative, table-based method for subsystems without PFH. 6.9 Subsection 6.3: Software-based manual parameterisation The requirements on software-based parameterisation of safety-related parameters are now intentionally distinct from the rest of the software part of the standard. Furthermore, the authors emphasise that this only involves manual, software-based parameterisation by authorised persons. This includes, for example, parameterisation using specially designated parameterisation tools, but not parameterisation based on DIP switches (DIP: dual in-line package) and not automated parameterisation or direct control of a machine by an operator, e.g. speed control of a forklift truck. Two things are new: firstly, additional information on possible influences that can lead to incorrect parameterisation, and secondly, more detailed requirements on the documentation of parameterisation processes. 7 Section 7: Software safety requirements and Annexes J and N The requirements on the development of safety-related software are now summarised in a separate section 7. In the introduction, the authors state that the section does not contain any specific requirements on software using artificial intelligence. The V model of the software safety lifecycle provides more precise details of the verification steps (reviews and tests) and the results of the phases. It also covers documentation that is written further down the line, i.e. documentation that gets increasingly more detailed. What is new is a simplified two- Fourth Edition of EN ISO 13849-1 (July 2023) 7 / 12 stage version of the V model for programming languages with limited variability languages (LVL) that use validated function blocks and run as application programs (SRASW) on verified hardware. Here, the programming typically implements only simple logical assignment of input and output blocks, so that the safety-related software specification can proceed directly to the coding phase. Safety-related embedded software (SRESW) usually requires a full variability language (FVL), while SRASW can also be written in LVL. The software section has now been supplemented to include a new decision-making aid for classifying a programming language as either LVL or FVL. Programming languages are considered LVL if they comply with IEC 61131-3 [6] – ladder diagram, function block diagramm, sequential function chart and Boolean algebra. But a programming language can also be classified as LVL if a defined programming flow has been put in place through