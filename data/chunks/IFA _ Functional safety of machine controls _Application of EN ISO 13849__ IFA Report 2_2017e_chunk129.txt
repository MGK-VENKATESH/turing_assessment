cases are error-prone. Programmers should therefore suitably archived for later use, for example for the event of limit the use of the syntax. Corresponding language modification after several years in operation. subsets are generally specified by the tool. 6.3.9 Software is in a constant state of • Programming guidelines: change: modification Suitable programming guidelines must be observed for coding of the software functions [47]. The guidelines Experience has shown that even after having initially been should be the existing, accepted rules of a recognized tested, SRASW will still be the subject of fervent extension organization. Alternatively, a company may draw up sui- and adaptation work during commissioning of an instal- table programming guidelines of its own, provided they lation or machine. This procedure is termed “modifica- have a sound practical or theoretical basis. Program- tion”. These changes are often so extensive that not only ming guidelines govern the use of critical language con- the code, but even the original specification is no longer structs, the scope and interface of software functions, appropriate and should in fact be revised. Changes to the formatting and commenting of the code, symbolic safety functions at one end of the installation or machine names of functions and variables, etc. may also have an impact on the safety functions at the other end that have not been modified that at this stage. These tools and guidelines should be specified in the Equally, the modifications may reveal gaps in the safety design document. concept. This possibility should be examined, and the necessary phases of the V model repeated if appropriate. 6.3.8 Unloved, but important: documentation and configuration management Practical experience also shows however that even after it has been installed, a machine or installation may still Before the manufacturer issues the EC declaration of require an additional