PFH for the safety function by adding together t = Cycle time (seconds) D cycle all the values of the blocks. The safety function’s total PFH D corresponds to a particular PL in Table 3 of EN ISO 13849-1. Example: d = 365 days, h = 24 hours and t = 1,800 op op cycle seconds (2 times/hour) which gives nop= 17,520 cycles. Requirements for safety-related software If you use a safety PLC for implementing safety functions, The following are examples of requirements for software this places requirements on how the software is from EN ISO 13849-1: developed and validated. To avoid error conditions, the • A development life cycle must be produced with software should be readable, understandable and be validation measures that indicate how and when the possible to test and maintain. program should be validated, for example, following a A software specification must be prepared to ensure change. that you can check the functionality of the program. It is • The specification and design must be documented. also important to divide the program into modules that • Function tests must be performed. can be tested individually. Paragraph 4.6 and Appendix • Validated functional blocks must be used whenever J of EN ISO 13849-1 specify requirements for safety possible. related software. • Data and control flow are to be described using, for example, a condition diagram or software flow chart. Safety in control systems according to EN ISO 13849-1 | 7 Example 1 Safety system using RT9 Protection layout for a packaging machine with low risks. Key switch JSNY8 Monitors that the door is closed. Safety relay RT9 Monitors safety components. Emergency stop button To stop the machine in case of danger. Step 1 – Risk assessment Step 2 – Reduce the risk Food to be packaged is