so that the safety-related software specification can proceed directly to the coding phase. Safety-related embedded software (SRESW) usually requires a full variability language (FVL), while SRASW can also be written in LVL. The software section has now been supplemented to include a new decision-making aid for classifying a programming language as either LVL or FVL. Programming languages are considered LVL if they comply with IEC 61131-3 [6] – ladder diagram, function block diagramm, sequential function chart and Boolean algebra. But a programming language can also be classified as LVL if a defined programming flow has been put in place through restrictions realised by programming guidelines, compilers or development tools. Whereas the requirements on SRESW were previously only described rather briefly, the new edition of the standard now contains exemplary extended guidance for all measures, both basic and additional. Further detailed information can be found in IFA Report 1/2020 [7]. The boundary conditions for the option of using components with non-accessible embedded software have been updated: The diversity requirement for PL c and d can now be met not only through different types of technology, but also through different types of design. The authors have clarified that the associated hardware and existing SRASW must meet the requirements of the standard. The software measures, graded according to PL and available diversity, cannot always be directly and r unambiguously assigned in each instance. This is where part one of the new informative Annex N should be helpful: First, one of four use cases can be specified from within the application – use cases that are based on the PL (a/b, c, d or e) but which can be downgraded by one level, depending on where the software is used. Such downgrading is possible for software in the test channel of Category 2 or