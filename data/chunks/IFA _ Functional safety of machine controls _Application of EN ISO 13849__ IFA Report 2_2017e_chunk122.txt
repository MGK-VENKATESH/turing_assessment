below. The downward-pointing part of the upon implementation of the functions in the software. The “V” describes the design activities of development, the specification is thus also the point of reference for accep- upward-pointing part the review activities. tance of the software: validation of the software functions must demonstrate whether the “contractual obligations” 6.3.2 Overall safety interface: software have been met. In the area of SRASW, this must be taken specification literally, since the engineering and programming of a con- trol system are often assigned by the parties responsible This document describes, based upon the higher-level for safety as a whole to other companies or corporate specification of the safety functions of the SRP/CS, the divisions. In this case, the specification also serves as a sub-functions of the specification that are to be imple- contractually binding interface to external or internal ser- vice providers. 66 6 Design of safe control systems 6.3.3 System and module design for the 6.3.5 Module test, integration test and “safety-related technical specification” validation The software architecture is generally already defined by In the module test, the new software functions developed the operating system or the development tool. The design specifically for the project are tested and simulated in further defines the structure and modules to be employed order to check whether they are coded as specified in the for implementation of the specified safety sub-functions. module design. At the integration test at the latest, for What existing library functions are to be employed must example during the typical commissioning of a machine's be determined, as must whether new functions may have PLC, the complete software is tested for proper operation to be developed specifically for the project. In this sub- on the hardware (integration) and compliance with the clause, the term software function/module also refers